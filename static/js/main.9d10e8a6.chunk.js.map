{"version":3,"sources":["serviceWorker.js","components/Navbar.jsx","components/Board.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Navbar","className","href","Board","props","state","width","height","gens","gensLimit","cellsAlive","forceStop","smooth","shape","launch","undefined","p5Canvas","remove","p5","sketch","pRef","current","stop","noLoop","incrementGenerations","setState","reset","handleInputChange","event","target","value","handleForceStopCheck","checked","handleSmoothCheck","handleWidthChange","handleHeightChange","handleShapeChange","id","p","terrain","previousTerrain","elderTerrain","loopTimer","stopIfStuck","alpha","rows","Math","floor","cols","createTerrain","Array","i","countNeighbors","x","y","neighbors","j","cleanCanvas","fill","stroke","rect","ellipse","setup","createCanvas","random","generateTerrain","background","draw","JSON","stringify","console","log","next","isDead","computeNextGeneration","React","createRef","type","min","step","onChange","this","name","onClick","style","fontSize","ref","Component","App","Fragment","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9d10e8a6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nexport default function Navbar() {\n\tconst url = 'https://github.com/adxl/life';\n\treturn (\n\t\t<div>\n\t\t\t<nav className=\"navbar navbar-dark bg-dark\">\n\t\t\t\t<a className=\"navbar-brand\" href={url}>Life</a>\n\t\t\t</nav>\n\t\t</div>\n\t);\n}\n\n","import React,{ Component } from 'react';\nimport p5 from 'p5';\n\nexport default class Board extends Component{\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.pRef = React.createRef();\n\t}\n\n\tstate = {\n\t\twidth: 400,\n\t\theight: 400,\n\t\tgens : 0,\n\t\tgensLimit: 0,\n\t\tcellsAlive: '-',\n\t\tforceStop: true,\n\t\tsmooth: false,\n\t\tshape : 'squares'\n\t}\n\n\tlaunch = () => {\n\t\tconst { gensLimit } = this.state;\n\t\tif(gensLimit >= 0) {\n\t\t\tif(this.p5Canvas !== undefined)\n\t\t\t\tthis.p5Canvas.remove();\n\t\t\tthis.p5Canvas = new p5(this.sketch,this.pRef.current);\n\t\t}\n\t}\n\n\tstop = () => {\n\t\tif (this.p5Canvas !== undefined)\n\t\t\tthis.p5Canvas.noLoop();\n\t}\n\n\tincrementGenerations = () => {\n\t\tlet gens = this.state.gens;\n\t\tgens++;\n\t\tthis.setState({gens});\n\t}\n\n\treset = () => {\n\t\tconst gens = 0;\n\t\tthis.setState({gens});\n\t}\n\n\thandleInputChange = event => {\n\t\tthis.setState({ gensLimit: event.target.value });\n\t}\n\n\thandleForceStopCheck = event => {\n\t\tthis.setState({forceStop: event.target.checked});\n\t}\n\t\n\thandleSmoothCheck = event => {\n\t\tthis.setState({smooth : event.target.checked});\n\t}\n\n\thandleWidthChange = event => {\n\t\t// console.log(event.target.value);\n\t\tthis.setState({ width : event.target.value});\t\n\t}\n\n\thandleHeightChange = event => {\n\t\t// console.log(event.target.value);\n\t\tthis.setState({ height : event.target.value});\n\t}\n\n\thandleShapeChange = event => {\n\t\tthis.setState({shape : event.target.id});\n\t\t\n\t}\n\n\t/**/\n\n\tsketch = (p) => {\n\n\t\tlet loopTimer = this.state.gensLimit;\n\t\t\n\t\tconst stopIfStuck = this.state.forceStop;\n\t\tconst shape = this.state.shape;\n\n\t\tlet alpha = 255;\n\n\t\tconst width = this.state.width;\n\t\tconst height = this.state.height;\n\t\t\n\t\tlet terrain;\n\t\tlet previousTerrain;\n\t\tlet elderTerrain;\n\n\t\tconst rows = Math.floor(width / 10);\n\t\tconst cols = Math.floor(height / 10);\n\n\t\tp.setup = () => {\n\n\t\t\tthis.reset();\n\t\t\tp.createCanvas(width,height);\n\t\t\t\n\t\t\tterrain = createTerrain();\n\t\t\tterrain = generateTerrain(terrain);\n\n\t\t\tif (this.state.smooth)\n\t\t\t\talpha = 5;\n\n\t\t\tp.background(200,alpha);\n\t\t};\n   \n\t\tfunction createTerrain() {\n\t\t\tlet terrain = new Array(rows);\n\t\t\n\t\t\tfor (let i = 0; i < rows; i++) \n\t\t\t\tterrain[i] = new Array(cols);\n\t\t\t\n\t\t\treturn terrain;\n\t\t}\n\t\t\n\t\tfunction generateTerrain(terrain) {\n\t\t\tfor (let i = 0; i < rows; i++){\n\t\t\t\tterrain[i] = new Array(cols);\n\t\t\t\tfor (let j = 0; j < cols; j++)\n\t\t\t\t\tterrain[i][j] = Math.random() < 0.5;\n\t\t\t}\n\n\t\t\treturn terrain;\n\t\t}\n\n\t\tp.draw = () => {\n\t\t\tlet cellsAlive = 0;\n\t\t\tfor (let i = 0; i < rows; i++)\n\t\t\t\tfor (let j = 0; j < cols; j++) {\n\t\t\t\t\tif (terrain[i][j]) {\n\t\t\t\t\t\tcellsAlive++;\n\t\t\t\t\t\tp.fill(50);\n\t\t\t\t\t\tp.stroke(255);\n\t\t\t\t\t\tif (shape === 'squares') {\n\t\t\t\t\t\t\tp.rect(i * 10,j * 10,10,10);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tp.ellipse(i * 10,j * 10,10,10);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tp.fill(200,alpha);\n\t\t\t\t\t\tif (shape === 'squares') {\n\t\t\t\t\t\t\tp.rect(i * 10,j * 10,10,10);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tp.ellipse(i * 10,j * 10,10,10);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\tthis.setState({cellsAlive});\n\t\t\t\n\t\t\t// force stop if stuck in an infinite loop\n\t\t\tif (stopIfStuck) {\t\n\t\t\t\tif (JSON.stringify(terrain) === JSON.stringify(elderTerrain)) {\n\t\t\t\t\tif(this.state.smooth)\n\t\t\t\t\t\tcleanCanvas();\n\t\t\t\t\t\n\t\t\t\t\tp.noLoop();\n\t\t\t\t\tconsole.log('Forced end.');\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\telderTerrain = previousTerrain;\n\t\t\tpreviousTerrain = terrain;\n\t\t\tterrain = computeNextGeneration();\n\n\t\t\t// add a new generation\n\t\t\tthis.incrementGenerations();\n\t\t\t\t\t\n\t\t\t// run draw() 'n=loopTimer' times\n\t\t\t\n\t\t\tloopTimer--;\n\t\t\t\n\t\t\tif (loopTimer === 0) {\n\t\t\t\tif(this.state.smooth)\n\t\t\t\t\tcleanCanvas();\n\t\t\t\t\n\t\t\t\tp.noLoop();\n\t\t\t\tconsole.log('End.');\t\n\t\t\t}\n\t\t};\n\n\t\tfunction computeNextGeneration() {\n\n\t\t\tlet next = createTerrain();\n\n\t\t\tfor (let i = 0; i < rows; i++)\n\t\t\t\tfor (let j = 0; j < cols; j++) {\n\n\t\t\t\t\tlet isDead = !terrain[i][j];\n\t\t\t\t\tlet neighbors = countNeighbors(i,j);\n\n\t\t\t\t\t// cell is dead and have 3 neighbors\n\t\t\t\t\tif (isDead && neighbors === 3) {\n\t\t\t\t\t\tnext[i][j] = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// cell is alive \n\t\t\t\t\telse if (!isDead && (neighbors < 2 || neighbors > 3)) {\n\t\t\t\t\t\tnext[i][j] = false;\n\t\t\t\t\t}\n\n\t\t\t\t\telse {\n\t\t\t\t\t\tnext[i][j] = terrain[i][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\treturn next;\n\t\t}\n\t\t\n\t\tfunction countNeighbors(x,y) {\n\t\t\tlet neighbors = 0;\n\n\t\t\tfor (let i = x - 1; i <= x + 1; i++)\n\t\t\t\tfor (let j = y - 1; j <= y + 1; j++)\n\t\t\t\t\tif ((i >= 0 && i < rows) && (j >= 0 && j < cols) && terrain[i][j])\n\t\t\t\t\t\tneighbors++;\n\n\t\t\tneighbors -= terrain[x][y];\n\t\t\treturn neighbors;\n\t\t}\n\n\t\tfunction cleanCanvas() {\n\t\t\tfor (let i = 0; i < rows; i++)\n\t\t\t\tfor (let j = 0; j < cols; j++) \n\t\t\t\t\tif (terrain[i][j]) {\n\t\t\t\t\t\tp.fill(50);\n\t\t\t\t\t\tp.stroke(255);\n\t\t\t\t\t\tif (shape === 'squares') {\n\t\t\t\t\t\t\tp.rect(i * 10,j * 10,10,10);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tp.ellipse(i * 10,j * 10,10,10);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tp.fill(200);\n\t\t\t\t\t\tif (shape === 'squares') {\n\t\t\t\t\t\t\tp.rect(i * 10,j * 10,10,10);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tp.ellipse(i * 10,j * 10,10,10);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t}\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"content\">\n\t\t\t\t<div className=\"info\" >\t\t\t\t\t\n\t\t\t\t\t<div className=\"fields\">\n\t\t\t\t\t\t<label className=\"text-dark mt-4\" >Width</label><br />\n\t\t\t\t\t\t<input type=\"number\" min=\"100\"  step=\"100\" onChange={this.handleWidthChange} value={this.state.width} /><br />\n\t\t\t\t\t\n\t\t\t\t\t\t<label className=\"text-dark mt-2\" >Height</label><br/>\n\t\t\t\t\t\t<input type=\"number\" min=\"100\"  step=\"100\" onChange={this.handleHeightChange} value={this.state.height} /><br/>\n\n\t\t\t\t\t\t<hr/>\n\n\t\t\t\t\t\t<label className=\"text-dark mt-1\" >Generations limit: (0 infinite)</label><br/>\n\t\t\t\t\t\t<input type=\"number\" className=\"mr-2\" onChange={this.handleInputChange} value={this.state.gensLimit} min=\"0\"/><br/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"checkbox  mt-3\">\n\t\t\t\t\t\t<input type=\"checkbox\" onChange={this.handleForceStopCheck} checked={this.state.forceStop} />\n\t\t\t\t\t\t<label className=\"text-dark ml-1\">Stop if unstable</label><br/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr />\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"shapes\">\n\t\t\t\t\t\t<input type=\"radio\" name=\"shape\" id=\"squares\" checked={this.state.shape === 'squares'} onChange={this.handleShapeChange} />\n\t\t\t\t\t\t<label className=\"text-dark ml-1 mr-2\">Squares</label>\n\n\t\t\t\t\t\t<input type=\"radio\" name=\"shape\" id=\"circles\" checked={this.state.shape === 'circles'} onChange={this.handleShapeChange} />\n\t\t\t\t\t\t<label className=\"text-dark ml-1\">Circles</label><br/>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"checkbox mt-2\">\n\t\t\t\t\t\t<input type=\"checkbox\" onChange={this.handleSmoothCheck} checked={this.state.smooth} />\n\t\t\t\t\t\t<label className=\"text-dark ml-1\">Smooth simulation</label><br/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t\t<button onClick={this.launch} className=\"btn btn-success mr-2\">Launch</button>\n\t\t\t\t\t\t<button onClick={this.stop} className=\"btn btn-danger\">Stop</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-container\">\n\t\t\t\t\t<div className=\"gen-counter\">\n\t\t\t\t\t\t<span style={{fontSize:20}} className=\"badge badge-info mt-3 mb-2\" >Generations: {this.state.gens}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"gen-counter\">\n\t\t\t\t\t\t<span style={{fontSize:15}} className=\"badge badge-secondary mt-1 mb-2\" >Cells: {this.state.cellsAlive}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<div ref={this.pRef} className=\"board\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} \n  \n}","import React from 'react';\nimport Navbar from './components/Navbar';\nimport Board from './components/Board';\n\nfunction App() {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Navbar />\n\t\t\t<main className=\"container mt-4\">\n\t\t\t\t<Board />\n\t\t\t</main>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n","import * as serviceWorker from './serviceWorker';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(<App/>,document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}